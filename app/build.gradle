plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlin)
    alias(libs.plugins.devtoolsKsp)
    alias(libs.plugins.googleDaggerHilt)
    alias(libs.plugins.kotlinxSerialization)
    alias(libs.plugins.compose.compiler)
    id("androidx.navigation.safeargs.kotlin")
}

android {
    namespace 'com.example.todoapplication'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.todoapplication"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        resourceConfigurations += ["en", "ru"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def authPassword = rootProject.ext.authorizationProperties.getProperty("AUTH_PASSWORD")
        if (authPassword) {
            buildConfigField("String", "AUTH_PASSWORD", "\"${authPassword}\"")
        }
        def baseUrl = rootProject.ext.authorizationProperties.getProperty("BASE_URL")
        if (baseUrl) {
            buildConfigField("String", "BASE_URL", "\"${baseUrl}\"")
        }
        def oAuthToken = rootProject.ext.authorizationProperties.getProperty("OAUTH_TOKEN")
        if (oAuthToken) {
            buildConfigField("String", "OAUTH_TOKEN", "\"${oAuthToken}\"")
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = freeCompilerArgs + "-Xcontext-receivers"
    }
    buildFeatures {
        viewBinding = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}


dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.core
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.fragment

    implementation libs.androidx.security.crypto


    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // Coroutine Lifecycle Scopes
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx

    //Dagger - Hilt
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    implementation libs.androidx.hilt.common
    implementation libs.androidx.hilt.work
    ksp libs.hilt.android.compiler
    ksp libs.androidx.hilt.compiler

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp
    implementation libs.logging.interceptor

    // Room
    implementation libs.androidx.room.runtime
    ksp libs.androidx.room.compiler

    // Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx

    //SwipeRefreshLayout
    implementation libs.androidx.swiperefreshlayout

    //leakCanary

    //Navigation
    implementation libs.navigation.compose
    implementation libs.kotlinx.serialization.json
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    //Compose
    implementation platform(libs.compose.bom)
    androidTestImplementation platform(libs.compose.bom)
    implementation libs.compose.material3
    implementation libs.compose.material2
    implementation libs.compose.foundation
    implementation libs.androidx.foundation.layout
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    debugImplementation libs.compose.ui.tooling

    implementation libs.androidx.work.runtime.ktx
}